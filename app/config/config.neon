extensions:
	pd.monitoring: Pd\Monitoring\DI\Extension
	dbal: Nextras\Dbal\Bridges\NetteDI\DbalExtension
	orm: Nextras\Orm\Bridges\NetteDI\OrmExtension
	migrations: Nextras\Migrations\Bridges\NetteDI\MigrationsExtension
	console: Kdyby\Console\DI\ConsoleExtension
	github: Kdyby\Github\DI\GithubExtension
	monitoring.monolog: Pd\Monitoring\Monolog\DI\Extension
	rabbitmq: Kdyby\RabbitMq\DI\RabbitMqExtension
	nextras.form: Nextras\Forms\Bridges\NetteDI\FormsExtension


orm:
	model: Pd\Monitoring\Orm\Orm


dbal:
	driver: mysqli


migrations:
	dir: %appDir%/../migrations
	driver: mysql
	dbal: nextras


github:
	permissions:
		- user:email
		- read:org


monitoring.monolog:
	allowedTypes:
		 - Pd\Monitoring\DashBoard\Presenters\BasePresenter


monolog:
	name: "pecka-monitoring"
	handlers:
		- Pd\Monitoring\Monolog\Handlers\DayFileHandler("pecka-ci-server", %logDir%)


parameters:
	binDir: %appDir%/bin
	logDir: %appDir%/../log
#	administratorTeamId: # local


application:
	errorPresenter: Error
	scanDirs: off
	mapping:
		*: Pd\Monitoring\*\Presenters\*Presenter


rabbitmq:
	connection:
#		host: %rabbitmq.host%
#		port: %rabbitmq.port%
#		user: %rabbitmq.user%
#		password: %rabbitmq.password%
#		vhost: %rabbitmq.vhost%
	producers:
		aliveCheck:
			exchange: {name: 'aliveCheck', type: direct}
			contentType: text/plain
		dnsCheck:
			exchange: {name: 'dnsCheck', type: direct}
			contentType: text/plain
		productsToSellCheck:
			exchange: {name: 'productsToSellCheck', type: direct}
			contentType: text/plain

	consumers:
		aliveCheck:
			exchange: {name: 'aliveCheck', type: direct}
			queue: {name: 'aliveCheck'}
			callback: [@Pd\Monitoring\Check\Consumers\AliveCheck, process]
		dnsCheck:
			exchange: {name: 'dnsCheck', type: direct}
			queue: {name: 'dnsCheck'}
			callback: [@Pd\Monitoring\Check\Consumers\DnsCheck, process]
		productsToSellCheck:
			exchange: {name: 'productsToSellCheck', type: direct}
			queue: {name: 'productsToSellCheck'}
			callback: [@Pd\Monitoring\Check\Consumers\ProductsToSellCheck, process]


services:
	routerFactory:
		class: Pd\Monitoring\Router\RouterFactory
		arguments:
			- %wwwDir%

	router: @routerFactory::createRouter

	-
		implement: Pd\Monitoring\DashBoard\Controls\Logout\IFactory

	-
		implement: Pd\Monitoring\DashBoard\Controls\Project\IFactory

	-
		class: Pd\Monitoring\DashBoard\Forms\Factory

	-
		implement: Pd\Monitoring\DashBoard\Controls\Check\IFactory

	-
		class: Pd\Monitoring\DashBoard\Controls\AddEditCheck\Factory

	-
		class: Pd\Monitoring\Check\Consumers\AliveCheck

	-
		class: Pd\Monitoring\Check\Consumers\DnsCheck

	-
		class: Pd\Monitoring\Check\Consumers\ProductsToSellCheck

	-
		class: Pd\Monitoring\User\AclFactory

	-
		factory: @Pd\Monitoring\User\AclFactory::create

	-
		class: Pd\Monitoring\DashBoard\Presenters\LoginPresenter
		arguments:
			administratorTeamId: %administratorTeamId%

	-
		class: Pd\Monitoring\Check\Commands\PublishAliveChecksCommand
		tags:
			- kdyby.console.command
		arguments:
			- @Kdyby\RabbitMq\Connection::getProducer('aliveCheck')

	-
		class: Pd\Monitoring\Check\Commands\PublishDnsChecksCommand
		tags:
			- kdyby.console.command
		arguments:
			- @Kdyby\RabbitMq\Connection::getProducer('dnsCheck')

	-
		class: Pd\Monitoring\Check\Commands\PublishProductsToSellChecksCommand
		tags:
			- kdyby.console.command
		arguments:
			- @Kdyby\RabbitMq\Connection::getProducer('productsToSellCheck')

	-
		implement: Pd\Monitoring\DashBoard\Controls\Refresh\IFactory

	-
		implement: Pd\Monitoring\DashBoard\Controls\LastRefresh\IFactory

	-
		class: Pd\Monitoring\Check\Commands\SlackCheckStatusesCommand
		tags:
			- kdyby.console.command
		arguments:
			hookUrl: %slack.hookUrl%
